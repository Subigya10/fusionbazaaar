import tkinter as tk
from tkinter import font, messagebox
from tkinter import Checkbutton, IntVar
from PIL import Image, ImageTk
import sqlite3

# Set up the database
conn = sqlite3.connect("fusion_bazaarrrrrr.db")
cursor = conn.cursor()
cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    first_name TEXT NOT NULL,
                    last_name TEXT NOT NULL,
                    phone_number TEXT NOT NULL,
                    password TEXT NOT NULL,
                    email TEXT NOT NULL UNIQUE)''')
conn.commit()

# Function to save user details during sign-up
def save_user_details(first_name, last_name, phone_number, password, email):
    # Simple validation
    if not first_name or not last_name or not phone_number or not password or not email:
        messagebox.showerror("Error", "All fields are required")
        return False

    if password != confirm_password_entry.get():
        messagebox.showerror("Error", "Passwords do not match")
        return False

    if not terms_var.get():
        messagebox.showerror("Error", "You must agree to the terms and conditions")
        return False

    # Save the details in the database
    try:
        cursor.execute("INSERT INTO users (first_name, last_name, phone_number, password, email) VALUES (?, ?, ?, ?, ?)",
                       (first_name, last_name, phone_number, password, email))
        conn.commit()
        messagebox.showinfo("Success", "Account created successfully!")
        return True
    except sqlite3.IntegrityError:
        messagebox.showerror("Error", "Email already exists")
        return False

# Function to handle sign-up button click
def sign_up():
    first_name = first_name_entry.get()
    last_name = last_name_entry.get()
    phone_number = phone_number_entry.get()
    password = password_entry.get()
    email = email_entry.get()

    if save_user_details(first_name, last_name, phone_number, password, email):
        switch_to_login()

# Function to switch to login page
def switch_to_login():
    root.destroy()
    login_window()

# Function to handle login
def login():
    phone_email = phone_email_entry.get()
    password = password_entry.get()

    if not phone_email or not password:
        messagebox.showerror("Error", "All fields are required")
        return

    # Check if the user exists
    cursor.execute("SELECT first_name FROM users WHERE (phone_number=? OR email=?) AND password=?",
                   (phone_email, phone_email, password))
    user = cursor.fetchone()
    if user:
        messagebox.showinfo("Success", f"Welcome, {user[0]}!")
        # Here, you can add code to transition to the main application window
    else:
        messagebox.showerror("Error", "Not matching")

# Create the login window
def login_window():
    root = tk.Tk()
    root.title("Fusion Bazaar (Login)")
    root.geometry("1200x700")
    root.resizable(False, False)
    
    # Custom fonts
    title_font = font.Font(family="Helvetica", size=16, weight="bold")
    button_font = font.Font(family="Helvetica", size=10, weight="bold")
    
    # Load and resize the image
    image = Image.open(r"C:\Users\Acer\Downloads\pic (1).png")
    image = image.resize((600, 500), Image.LANCZOS)
    photo = ImageTk.PhotoImage(image)
    
    # Image label
    image_label = tk.Label(root, image=photo)
    image_label.pack(side="left", padx=20, pady=20)
    
    # Right frame for login form
    right_frame = tk.Frame(root)
    right_frame.pack(side="right", padx=20, pady=20)
    
    # Title
    title = tk.Label(right_frame, text="Welcome to FUSION BAZAAR! Please login.", font=title_font)
    title.grid(row=0, column=0, columnspan=2, pady=10)
    
    # Phone Number / Email label and entry
    global phone_email_entry, password_entry
    phone_email_label = tk.Label(right_frame, text="Phone Number / Email:")
    phone_email_label.grid(row=1, column=0, sticky="e", pady=5)
    phone_email_entry = tk.Entry(right_frame, width=30)
    phone_email_entry.grid(row=1, column=1, pady=5)
    
    # Password label and entry
    password_label = tk.Label(right_frame, text="Password:")
    password_label.grid(row=2, column=0, sticky="e", pady=5)
    password_entry = tk.Entry(right_frame, show='*', width=30)
    password_entry.grid(row=2, column=1, pady=5)
    
    # Forgot Password link
    forgot_password_link = tk.Label(right_frame, text="Forgot Password?", fg="blue", cursor="hand2")
    forgot_password_link.grid(row=3, column=1, sticky="w", pady=5)
    forgot_password_link.bind("<Button-1>", lambda e: print("Forgot Password Clicked"))
    
    # Login button
    login_button = tk.Button(right_frame, text="LOGIN", font=button_font, command=login, bg="#d0a9f5")
    login_button.grid(row=4, column=0, columnspan=2, pady=10)
    
    # Sign-up link
    sign_up_label = tk.Label(right_frame, text="Don't have an Account?", fg="black")
    sign_up_label.grid(row=5, column=0, pady=5)
    sign_up_link = tk.Label(right_frame, text="Sign up", fg="orange", cursor="hand2")
    sign_up_link.grid(row=5, column=1, sticky="w", pady=5)
    sign_up_link.bind("<Button-1>", lambda e: root.destroy())
    
    root.mainloop()

# Main window (Sign-up)
root = tk.Tk()
root.title("Fusion Bazaar (Sign up)")
root.geometry("1200x700")
root.resizable(False, False)

# Custom fonts
title_font = font.Font(family="Helvetica", size=16, weight="bold")
button_font = font.Font(family="Helvetica", size=10, weight="bold")

# Load and resize the image
image = Image.open(r"C:\Users\Acer\Downloads\pic2.png")
image = image.resize((600, 500), Image.LANCZOS)
photo = ImageTk.PhotoImage(image)

# Image label
image_label = tk.Label(root, image=photo)
image_label.pack(side="left", padx=20, pady=20)

# Right frame for sign-up form
right_frame = tk.Frame(root)
right_frame.pack(side="right", padx=20, pady=20)

# Title
title = tk.Label(right_frame, text="Create Your Account Here", font=title_font)
title.grid(row=0, column=0, columnspan=2, pady=10)

# First name label and entry
first_name_label = tk.Label(right_frame, text="First name")
first_name_label.grid(row=1, column=0, sticky="e", pady=5)
first_name_entry = tk.Entry(right_frame, width=30)
first_name_entry.grid(row=1, column=1, pady=5)

# Last name label and entry
last_name_label = tk.Label(right_frame, text="Last Name")
last_name_label.grid(row=2, column=0, sticky="e", pady=5)
last_name_entry = tk.Entry(right_frame, width=30)
last_name_entry.grid(row=2, column=1, pady=5)

# Phone Number label and entry
phone_number_label = tk.Label(right_frame, text="Phone Number")
phone_number_label.grid(row=3, column=0, sticky="e", pady=5)
phone_number_entry = tk.Entry(right_frame, width=30)
phone_number_entry.grid(row=3, column=1, pady=5)

# Password label and entry
password_label = tk.Label(right_frame, text="Password")
password_label.grid(row=4, column=0, sticky="e", pady=5)
password_entry = tk.Entry(right_frame, show='*', width=30)
password_entry.grid(row=4, column=1, pady=5)

# Confirm Password label and entry
confirm_password_label = tk.Label(right_frame, text="Confirm Password")
confirm_password_label.grid(row=5, column=0, sticky="e", pady=5)
confirm_password_entry = tk.Entry(right_frame, show='*', width=30)
confirm_password_entry.grid(row=5, column=1, pady=5)

# Email label and entry
email_label = tk.Label(right_frame, text="Email")
email_label.grid(row=6, column=0, sticky="e", pady=5)
email_entry = tk.Entry(right_frame, width=30)
email_entry.grid(row=6, column=1, pady=5)

# Terms and conditions checkbox
terms_var = IntVar()
terms_check = Checkbutton(right_frame, text="I agree to Fusion Bazaar Term's and conditions and privacy Policy.", variable=terms_var)
terms_check.grid(row=7, column=0, columnspan=2, pady=5)

# Sign-up button
signup_button = tk.Button(right_frame, text="SIGN UP", font=button_font, command=sign_up, bg="#d0a9f5")
signup_button.grid(row=8, column=0, columnspan=2, pady=10)

# Login link
login_label = tk.Label(right_frame, text="Already have an account?", fg="black")
login_label.grid(row=9, column=0, pady=5)
login_link = tk.Label(right_frame, text="Login", fg="orange", cursor="hand2")
login_link.grid(row=9, column=1, sticky="w", pady=5)
login_link.bind("<Button-1>", lambda e: switch_to_login())

root.mainloop()
